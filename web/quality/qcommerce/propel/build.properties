# The name of the project

propel.project = qcommerce
propel.targetPackage = ${propel.project}


# The Propel platform that will be used to determine how to build
# the SQL DDL, the PHP classes, etc.

propel.database = mysql


# The database PDO connection settings at builtime.
# This setting is required for the sql, reverse, and datasql tasks.
# Note that some drivers (e.g. mysql, oracle) require that you specify the
# username and password separately from the DSN, which is why they are
# available as options.
# Example PDO connection strings:
#   mysql:host=localhost;port=3307;dbname=testdb
#   sqlite:/opt/databases/mydb.sq3
#   sqlite::memory:
#   pgsql:host=localhost;port=5432;dbname=testdb;user=bruce;password=mypass
#   oci:dbname=//localhost:1521/mydb

propel.database.name = spingreen
propel.database.url = mysql:host=mysqldatabase.ch1fyvs1jrqj.sa-east-1.rds.amazonaws.com;port=3306;dbname=${propel.database.name};charset=utf8
propel.database.user = adminuser
propel.database.password = 9u567CWU8r1v89Z
propel.mysql.tableType = InnoDB


# Directory where the project files (`build.properties`, `schema.xml`,
# `runtime-conf.xml`, etc.) are located.
# If you use the `propel-gen` script, this value will get overridden by
# the path from which the script is called.

propel.project.dir = {current_path}


# The directory where Propel expects to find your `schema.xml` file.

propel.schema.dir = ${propel.project.dir}


# The directory where Propel should output classes, sql, config, etc.

propel.output.dir = ${propel.project.dir}/build


# The directory where Propel should output generated object model classes.

propel.php.dir = ${propel.output.dir}/classes


# The directory where Propel should output the compiled runtime configuration.

propel.phpconf.dir = ${propel.output.dir}/conf


# The name of the compiled configuration and classmap files

propel.runtime.phpconf.file = ${propel.project}-conf.php
propel.runtime.phpconf-classmap.file = ${propel.project}-classmap.php


# The directory where Propel should output the generated DDL (or data insert statements, etc.)

propel.sql.dir = ${propel.output.dir}/sql


# Whether to add `require` statements on the generated stub classes.
# Propel uses autoloading for OM classes, and doesn't insert require statements
# by default. If you don't want to use autoloading, set this to true.

propel.addIncludes = false